[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.poetry]
package-mode = false
version = "0.1.0"
description = ""
authors = [
  "cmrfrd",
]
readme = "README.md"
license = "MIT"

[[tool.poetry.source]]
name = "pytorch-cuda"
url = "https://download.pytorch.org/whl/cu121"
priority = "explicit"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
pydantic = "^2.7.3"
torchvision = "^0.18.1"
diffusers = "^0.30.0"
transformers = "^4.42.4"
sentencepiece = "^0.2.0"
accelerate = "^0.33.0"
protobuf = "^5.27.2"
pillow = "^10.4.0"
tiktoken = "^0.7.0"
matplotlib = "^3.9.1"
einops = "^0.8.0"
transformers-stream-generator = "^0.0.5"
flash-attn = {url = "https://github.com/Dao-AILab/flash-attention/releases/download/v2.5.8/flash_attn-2.5.8+cu122torch2.3cxx11abiFALSE-cp310-cp310-linux_x86_64.whl"}
bitsandbytes = "^0.43.1"
torch = { version = "2.3.1+cu121", source = "pytorch-cuda" }
fbgemm-gpu = { version = "^0.7.0", source = "pytorch-cuda" }
jinja2 = "^3.1.4"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.2"
mypy = "^1.10.0"
ipython = "^8.24.0"

[[tool.mypy.overrides]]
module = [
  'pydantic.*',
  'transformers.*',
]
ignore_missing_imports = true
exclude = [
  "test/**/*_test.py",
  "test/**/test_*.py"
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "N",  # PEP8 naming convetions
    "D"   # pydocstyle
]
ignore = [
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "D401",  # imperative mood
    "D100",  # Missing docstring module
    "D101",  # Missing docstring in public class
    "D103",  # Missing docstring in public function
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_generics = false
disallow_any_explicit = false
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_redundant_casts = true
strict_equality = true
warn_unused_configs = true
no_implicit_reexport = true
disable_error_code = ["no-untyped-call"]